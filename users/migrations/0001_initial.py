# Generated by Django 4.2.4 on 2023-11-16 19:53

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='nomi')),
                ('slug', models.SlugField(editable=False)),
            ],
            options={
                'verbose_name': 'kurs ',
                'verbose_name_plural': 'Kurslar',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='nomi')),
                ('slug', models.SlugField(editable=False)),
            ],
            options={
                'verbose_name': 'guruh ',
                'verbose_name_plural': 'Guruh',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'Bunday foydalanuvchi nomiga ega foydalanuvchi allaqachon mavjud.'}, help_text='Majburiy. 150 yoki undan kam belgi. Faqat harflar, raqamlar va @/./+/-/_.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Foydalanuvchi nomi')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='Ism')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Familiya')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='elektron pochta manzili')),
                ('is_staff', models.BooleanField(default=False, help_text='Foydalanuvchining ushbu administrator saytiga kirishi mumkinligini belgilaydi.', verbose_name='Xodim statusi')),
                ('is_active', models.BooleanField(default=True, help_text="Ushbu foydalanuvchini faol deb hisoblash kerakligini belgilaydi.Hisoblarni o'chirish o'rniga bu belgini olib tashlang.", verbose_name='Talaba status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name="qo'shilgan sanasi")),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sharif')),
                ('address', models.CharField(default='-', max_length=255, verbose_name='manzil')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='users.course', verbose_name='kurs')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='users.group', verbose_name='guruh')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'foydalanuvchi ',
                'verbose_name_plural': 'Foydalanuvchilar',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
